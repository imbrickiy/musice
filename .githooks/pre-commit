#!/usr/bin/env bash
set -euo pipefail

# Pre-commit checks for the musice Flutter app
# - Generates localizations
# - Runs custom_lint (enforces no direct Icons.* in lib/)
# - Runs flutter analyze
# - Runs tests (skip with SKIP_TESTS=1)

# Ensure we run from the repo root
REPO_ROOT_DIR=$(git rev-parse --show-toplevel)
cd "$REPO_ROOT_DIR"

# If Flutter is not available, fail fast
if ! command -v flutter >/dev/null 2>&1; then
  echo "[pre-commit] Flutter not found on PATH. Aborting." >&2
  exit 1
fi

# If Dart is not available, fail fast
if ! command -v dart >/dev/null 2>&1; then
  echo "[pre-commit] Dart not found on PATH. Aborting." >&2
  exit 1
fi

# If pubspec files changed in the index, run pub get
if git diff --name-only --cached | grep -E '^(pubspec.yaml|pubspec.lock)$' >/dev/null 2>&1; then
  echo "[pre-commit] Detected pubspec change. Running flutter pub get…"
  flutter pub get
fi

# Generate localizations (fast, no-op if unchanged)
echo "[pre-commit] Generating localizations…"
flutter gen-l10n

# Run custom lint (must be set up in dev_dependencies)
echo "[pre-commit] Running custom_lint…"
dart run custom_lint

# Static analysis
echo "[pre-commit] Running flutter analyze…"
flutter analyze

# Tests (can be skipped by exporting SKIP_TESTS=1)
if [[ "${SKIP_TESTS:-0}" != "1" ]]; then
  echo "[pre-commit] Running tests… (export SKIP_TESTS=1 to skip)"
  flutter test -r compact
else
  echo "[pre-commit] SKIP_TESTS=1 set — skipping tests"
fi

echo "[pre-commit] All checks passed. Proceeding with commit."

